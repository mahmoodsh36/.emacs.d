#+begin_export html
<p style="height:0px; display: none;">
  \(\DeclareMathOperator{\spn}{span}\)
  \(\DeclareMathOperator{\dom}{domain}\)
  \(\DeclareMathOperator{\ran}{range}\)
  \(\DeclareMathOperator{\rng}{range}\)
  \(\DeclareMathOperator{\img}{Im}\)
  \(\newcommand\dif[1]{\:\textrm{d}#1}\)
  \(\DeclarePairedDelimiter\ceil{\lceil}{\rceil}\)
  \(\DeclarePairedDelimiter\floor{\lfloor}{\rfloor}\)
</p>
#+end_export

#+begin_export latex
\definecolor{Brown}{cmyk}{0,0.81,1,0.60}
\definecolor{OliveGreen}{cmyk}{0.64,0,0.95,0.40}
\definecolor{CadetBlue}{cmyk}{0.62,0.57,0.23,0}
\definecolor{lightlightgray}{gray}{0.9}
\lstset{
  language=C,                             % Code langugage
  basicstyle=\ttfamily,                   % Code font, Examples: \footnotesize, \ttfamily
  keywordstyle=\color{OliveGreen},        % Keywords font ('*' = uppercase)
  commentstyle=\color{gray},              % Comments font
  numbers=left,                           % Line nums position
  numberstyle=\tiny,                      % Line-numbers fonts
  stepnumber=1,                           % Step between two line-numbers
  numbersep=5pt,                          % How far are line-numbers from code
  backgroundcolor=\color{lightlightgray}, % Choose background color
  frame=single,                           % A frame around the code
  tabsize=2,                              % Default tab size
  captionpos=b,                           % Caption-position = bottom
  breaklines=true,                        % Automatic line breaking?
  breakatwhitespace=false,                % Automatic breaks only at whitespace?
  showspaces=false,                       % Dont make spaces visible
  showtabs=false,                         % Dont make tabls visible
  columns=flexible,                       % Column format
  morekeywords={__global__, __device__},  % CUDA specific keywords
  showstringspaces=false,                 % dont show spaces in strings
}
% so that latex doesnt complain about sage not being a language
\lstdefinelanguage{sage}{}

% environment definition for special blocks
\theoremstyle{definition}
\newtheorem{my_example}{Example}
\counterwithin{my_example}{section}
\counterwithin{my_example}{subsection}
\newtheorem{definition}{Definition}
\counterwithin{definition}{section}
\counterwithin{definition}{subsection}
\newtheorem{characteristic}{Characteristic}
\newtheorem{entailment}{Entailment}
%\newtheore*{proof}{Proof}
\newtheorem{lemma}{Lemma}
\newtheorem{question}{Question}
\newtheorem{subquestion}{Subquestion}[question]
%\newtheorem{note}{Note}
\newtheorem{answer}{Answer}
\counterwithin{answer}{question}
\counterwithin{answer}{subquestion}
\newtheorem{step}{Step}[answer]

% the following snippet auto resizes images to fit properly
% Determine if the image is too wide for the page.
% \makeatletter
% \def\ScaleIfNeeded{%
%   \ifdim\Gin@nat@width>\linewidth
%     \linewidth
%   \else
%     \Gin@nat@width
%   \fi
% }
% \makeatother
% % Resize figures that are too wide for the page.
% \let\oldincludegraphics\includegraphics
% \renewcommand\includegraphics[2][]{%
%   \oldincludegraphics[width=\ScaleIfNeeded]{#2}
% }

\newenvironment{note}
  {\begin{bclogo}[logo=\bcinfo, couleurBarre=orange, couleur=lightgray]{ note}}
  {\end{bclogo}}
\newenvironment{attention}
  {\begin{bclogo}[logo=\bcattention, couleurBarre=red, noborder=true, 
                couleur=red!15]{Important!}}
  {\end{bclogo}}
#+end_export

#+begin_export html
<style>
.lemma, .proof, .entailment, .definition, .note, .my_example, .characteristic, .assumption, .question, .subquestion, .answer, .step {
  border-radius: 10px;
  border-style: groove;
  border-width: 3px;
}
.lemma:before, .proof:before, .entailment:before, .definition:before, .note:before, .my_example:before, .characteristic:before, .assumption:before, .question:before, .subquestion:before, .answer:before, .step:before {
  background-color: #bbb;
  position: relative;
  border-radius: 10px;
  padding-right: 5px;
  padding-left: 5px;
  padding-top: 1px;
  padding-bottom: 1px;
  border: 1px solid black;
}
.lemma {
  background-color: beige;
}
.proof {
  background-color: moccasin;
}
.entailment {
  background-color: lightsteelblue;
}
.lemma:before {
  content: "lemma:";
}
.proof:before {
  content: "proof:";
}
.entailment:before {
  content: "entailment (logical consequence):";
}
.note {
  background-color: blanchedalmond;
}
.note:before {
  /* content: url(/note.png) "note:"; */
  content: "note:";
}
.my_example {
  background-color: #e8cfc8; 
}
.my_example:before {
  content: "example:";
}
p {
  margin: 0px;
  padding: 0px;
}
img {
   display: block;
   margin-left: auto;
   margin-right: auto;
}
.hide {
  display: none;
}
.definition {
  background-color: snow;
}
.definition:before {
  content: "definition:";
}
.characteristic {
  background-color: #dfdada;
}
.characteristic:before {
  content: "characteristic:";
}
.assumption {
  background-color: #65ad98;
}
.question {
  background-color: #e1c6c6;
}
.question:before {
  content: "question:";
}
.subquestion {
  background-color: #e5e2d8;
}
.subquestion:before {
  content: "subquestion:";
}
.answer {
  background-color: #beabc5;
}
.answer:before {
  content: "answer:";
}
.step {
  background-color: #b4d3ad;
}
.step:before {
  content: "step:";
}
</style>

<!-- mathjax -->
<script>
// auto load modules like cancel
window.MathJax = {
  loader: {load: ['[tex]/autoload', '[tex]/mathtools', '[tex]/physics']},
  tex: {
    packages: {'[+]': ['autoload', 'mathtools', 'physics']}
  }
};
/* since i've configured org mode to insert a new line after every line i need to get rid of those that mess up my html */
function removeNewlineAfterDisplayMath() {
    elems = document.querySelectorAll('mjx-container')
    for (i = 0; i < elems.length; ++i) {
        elem = elems[i]
        nextElem = elem.nextElementSibling
        if (nextElem !== null && nextElem.tagName === 'BR')
            nextElem.remove()
    }
}
window.onload = function() {
  removeNewlineAfterDisplayMath()
}
</script>
<script type="text/javascript" id="MathJax-script" async
        src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js">
</script>
#+end_export

#+begin_comment
/*
table {
  margin: auto;
  border-collapse: collapse;
}
table td, table th {
  border: 1px solid #ddd;
  padding: 8px;
}
table tr:nth-child(even){background-color: #f2f2f2;}
table tr:hover {background-color: #ddd;}
table th {
  padding-top: 12px;
  padding-bottom: 12px;
  text-align: left;
}
pre {
  margin: 0;
}
.highlight {
    background-color: burlywood;
    border: 2px groove red;
    border-radius: 10px;
    padding: 10px;
}
.highlight:before {
  content: "{ Input: }";
}
*/
#+end_comment

# i stopped using this because latex cant handle nested breakable frames
#+begin_comment
\newenvironment{title}{\begin{center}}{\end{center}}
\newenvironment{my_example}
  {\begin{tcolorbox}[colback=blue!10, enforce breakable, enhanced]example:\\}
  {\end{tcolorbox}}
\newenvironment{definition}
  {\begin{tcolorbox}[colback=orange!10, enforce breakable, enhanced]}
  {\end{tcolorbox}}
\newenvironment{characteristic}
  {\begin{tcolorbox}[colback=orange!5, enforce breakable, enhanced]}
  {\end{tcolorbox}}
\newenvironment{entailment}
  {\begin{tcolorbox}[colback=green!10, enforce breakable, enhanced]entailment:\\}
  {\end{tcolorbox}}
\renewenvironment{proof}
  {\begin{tcolorbox}[colback=green!10, enforce breakable, enhanced]proof:\\}
  {\end{tcolorbox}}
\newenvironment{lemma}
  {\begin{tcolorbox}[colback=red!10, enforce breakable, enhanced]lemma:\\}
  {\end{tcolorbox}}
\newenvironment{question}
  {\begin{tcolorbox}[colback=pink!10, enforce breakable, enhanced]question:\\}
  {\end{tcolorbox}}
\newenvironment{subquestion}
  {\begin{tcolorbox}[colback=gray!10, enforce breakable, enhanced]subquestion:\\}
  {\end{tcolorbox}}
\newenvironment{answer}
  {\begin{tcolorbox}[colback=purple!10, enforce breakable, enhanced]answer:\\}
  {\end{tcolorbox}}
\newenvironment{step}
  {\begin{tcolorbox}[colback=red!5, enforce breakable, enhanced]step:\\}
  {\end{tcolorbox}}
#+end_comment
